<template>
    <view class="detailed-list">
        <block wx:for="{{ carts }}" wx:key="id" wx:for-index="cartIndex" wx:for-item="cart">
            <view class="cart">
                <view class="activity" wx:if="{{ cart.activity.id }}">
                    <view class="zan-clearfix activity-item">
                        <view wx:for="{{ cart.activity.rules }}" wx:key="index" class="zan-ellipsis">
                            <zan-tag plain type="danger" style="margin-right: 5px;">{{ item.type }}</zan-tag>
                            <text wx:for="{{ item.items }}" wx:for-item="name">{{ name }}，</text>
                        </view>
                    </view>
                </view>
                <view class="item" wx:for="{{ cart.carts }}" wx:for-index="index" wx:for-item="item" wx:key="{{ item.id }}">
                    <view class="item-header">
                        <zan-row>
                            <zan-col col="2">
                                <view class="select zan-c-gray-dark" @tap="select({{ item.id }})">
                                    <zan-icon type="check" class="select-icon" wx:if="{{ !item.selected }}"></zan-icon>
                                    <zan-icon type="checked" class="select-icon selected" wx:else></zan-icon>
                                </view>
                            </zan-col>
                            <zan-col col="15">
                                <view class="title">
                                    <image src="{{ item.sku && item.sku.thumb ? item.sku.thumb : item.product.thumb }}" />
                                    <text class="zan-ellipsis--l2">{{ item.product.name }}</text>
                                </view>
                            </zan-col>
                            <zan-col col="7">
                                <view class="price zan-pull-right wg-flex-middle" style="line-height: normal;">
                                    <view class="zan-c-gray-dark">{{ item.num }} × </view>
                                    <view wx:if="{{ item.sku }}">
                                        <view class="zan-font-12 wg-color-gray zan-text-deleted" wx:if="{{ item.sku.activity_price }}">￥{{ item.sku.price }}</view>
                                        <view class="zan-font-16 zan-c-red">￥{{ item.sku.activity_price || item.sku.price }}</view>
                                    </view>
                                    <view wx:else>
                                        <view class="zan-font-12 wg-color-gray zan-text-deleted" wx:if="{{ item.product.old_price }}">￥{{ item.product.old_price }}</view>
                                        <view class="zan-font-16 zan-c-red">￥{{ item.product.price }}</view>
                                    </view>
                                </view>
                            </zan-col>
                        </zan-row>
                    </view>
                    <view class="item-main">
                        <zan-row>
                            <zan-col col="10">
                                <view wx:if="{{ item.sku }}" class="name">
                                    <text wx:for="{{ item.sku.params }}" wx:for-item="param" wx:key="id">{{ param.param_name }} </text>
                                </view>
                                <view wx:else class="name">
                                    <text>无规格</text>
                                </view>
                            </zan-col>
                            <zan-col col="14">
                                <view class="flex-middle cart-num">
                                    <zan-stepper stepper="{{ item.num }}" min="1" max="{{ item.sku ? item.sku.stocks : item.product.stocks }}" size="small" bind:change="setNum({{ cartIndex }}, {{ index }})"></zan-stepper>
                                    <view class="delete" @tap="remove({{ item.id }})"><zan-icon type="delete"></zan-icon></view>
                                </view>
                            </zan-col>
                        </zan-row>
                    </view>
                </view>
                <view class="item-total">
                    <view><text>优惠：￥{{ cart.total.spread }}</text><text>小计：￥{{ cart.total.discount_price }}</text></view>
                </view>
            </view>
        </block>
        <placeholder :show.sync="isEmpty" message="购物车什么都没有奥~" iconType="custome">
            <zan-icon slot="icon" type="shopping-cart" style="font-size: 50px; color: #999;"></zan-icon>
            <navigator open-type="redirect" url="/pages/index"><button style="display: inline-block; margin: 20px;" class="wg-btn-danger radius">去商城逛逛</button></navigator>
        </placeholder>
    </view>
    <view class="wg-fill-block"></view>
    <view class="buy-nav">
        <zan-row>
            <zan-col col="6">
                <view class="select" @tap="selectAll" wx:if="{{ carts.length == 1 }}">
                    <zan-icon slot="icon" type="checked" class="select-icon selected" wx:if="{{ selectedAll }}"></zan-icon>
                    <zan-icon slot="icon" type="check" class="select-icon" wx:else></zan-icon>
                    全选
                </view>
                <view class="select" wx:else style="color: #ccc;">
                    <zan-icon slot="icon" type="check" class="select-icon" disabled></zan-icon>
                    全选
                </view>
            </zan-col>
            <zan-col col="12">
                <view class="price">
                    <text>优惠：￥{{ total.spread }}</text>
                    <text>合计：￥{{ total.discount_price }}</text>
                </view>
            </zan-col>
            <zan-col col="6">
                <button disabled="{{ total.num <= 0 }}" class="wg-btn-danger large" @tap="order">结算({{ total.num }})</button>
            </zan-col>
        </zan-row>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import api from '@/api/api';
    import Placeholder from '@/components/common/placeholder';

    export default class Carts extends wepy.page {
        components = {
            placeholder : Placeholder
        };
        config = {
            navigationBarTitleText: "购物车",
            navigationBarBackgroundColor: '#fff',
            navigationBarTextStyle: 'black',
            usingComponents: {
                "zan-row": "../../zanUi/row/index",
                "zan-col": "../../zanUi/col/index",
                "zan-icon": "../../zanUi/icon/index",
                "zan-stepper": "../../zanUi/stepper/index",
                "zan-tag": "../../zanUi/tag/index",
            },
        };
        data = {
            carts: null,
            selected: [],
            total: {
                num: 0,
                price: 0,
                discount_price: 0,
                spread: 0,
            }
        };
        computed = {
            isEmpty() {
                return !this.carts || !this.carts.length;
            },
            selectedAll() {
                if(!this.isEmpty) {
                    return this.selected.length == this.carts.length;
                }
                return false;
            },
        };
        async onShow() {
            let res = await api.getCarts({ include: 'product,sku', params: 1 });
            this.carts = res.data.data;
            this.total = res.data.total;
            this.$apply();
        };
        selectAll() {
            if(this.carts.length == 1) {
                this.carts.map(cart => {
                    cart.carts.map(item => {
                        item.selected = this.selectedAll ? false : true;
                    });
                });
            }
            
        };
        methods = {
            async select(id) {
                let res = await api.selectCart(id);
                this.carts = res.data.data;
                this.total = res.data.total;
                this.$apply();
            },
            async setNum(cartIndex, index, event) {
                let that = this;
                let product = this.carts[cartIndex].carts[index];
                let res = await api.updateCart(product.id, event.detail);
                this.carts = res.data.data;
                this.total = res.data.total;
                this.$apply();
            },
            async remove(id) {
                let res = await api.deleteCart(id);
                if(!res.error) {
                    this.carts = res.data.data;
                    this.total = res.data.total;
                    this.$apply();
                }
            },
            order() {
                wepy.navigateTo({
                    url: '/pages/shop/buy'
                });
            }
        }
    }
</script>

<style lang="scss" scoped>
    @import '../../assets/sass/variable';
    .select-ionc {
        color: #999;
    }
    .cart {
        padding: 10px;
        .activity {
            background: #fff;
            .activity-item {
                padding: 10px;
                color: #999;
                line-height: 24px;
            }
        }
        .item-total {
            text-align: right;
            padding: 20px 10px;
            background: #fff;
            text {
                margin-left: 10px;
            }
        }
    }
    .buy-nav {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background: #fff;
        line-height: 48px;
        z-index: 2;
        .select {
            padding-left: 20px;
            font-size: 16px;
            .selected {
                color: $color-danger;
            }
        }
        .price {
            text-align: right;
            padding-right: 10px;
            font-size: 14px;
            color: $color-danger;
            text:first-child {
                font-size: 12px;
                color: #999;
                margin-right: 5px;
            }
        }
    }
</style>
