<template>
    <import src="../../plugins/wxParse/wxParse.wxml"/>
    <view wx:if="{{ product }}">
        <view class="sliders">
            <swiper indicator-dots="{{true}}" interval="3000" id="swiper">
                <swiper-item wx:for="{{ product.images }}" wx:key="index">
                    <image src="{{ item }}" mode="widthFix"></image>
                </swiper-item>
            </swiper>
        </view>
        <view class="title-cell">
            <view class="title zan-font-18">{{ product.name }}</view>
            <view class="description">{{ product.description || '' }}</view>
            <view class="price zan-font-18">￥{{ product.price }} <text class="zan-text-deleted wg-color-gray zan-font-12" wx:if="{{ product.old_price }}">￥{{ product.old_price }}</text></view>
        </view>
        <view class="panel">
            <zan-panel hide-border>
                <zan-cell-group>
                    <zan-cell title="领券" is-link url="/pages/shop/coupons?product_id={{ product.id }}">
                        <text class="wg-icon wg-icon-youhuiquan" slot="icon"></text>
                        <view slot="footer" wx:if="{{ product.couponsCount }}">有 <text class="wg-color-danger">{{ product.couponsCount }}</text> 张优惠券，赶快领取!!!!</view>
                        <view slot="footer" wx:else>暂无可用优惠券~</view>
                    </zan-cell>
                    <zan-cell title="促销" wx:if="{{ product.activity }}" is-link url="/pages/shop/special?id={{ product.activity.id }}">
                        <text class="wg-icon wg-icon-cuxiao" slot="icon"></text>
                        <view slot="footer">{{ product.activity.condition_string }} 点击查看~</view>
                    </zan-cell>
                </zan-cell-group>
            </zan-panel>
        </view>
        <view class="panel" wx:if="{{ product.specs.data && product.specs.data.length }}">
            <zan-panel hide-border>
                <zan-cell title="规格" @tap="openSpecs" is-link>
                    <span slot="footer">选择 <span wx:for="{{ product.specs.data }}" wx:key="id">{{ item.selected ? item.value.name : item.name }} </span></span>
                </zan-cell>
            </zan-panel>
        </view>
        <zan-tab list="{{ [{id: 1, title: '商品详情'}, {id: 2, title: '商品属性'}] }}" selected-id="{{ tabId }}" bindtabchange="handelTab" height="40" />
        <view class="detail" wx:if="{{ tabId == 1 }}">
            <zan-panel hide-border>
                <view class="wg-html"><template is="wxParse" data="{{ wxParseData:content.nodes }}"></template></view>
            </zan-panel>
        </view>
        <view class="attributes" wx:else>
            <zan-panel hide-border>
                <view class="item zan-clearfix" wx:for="{{ product.attributes.data }}">
                    <view>{{ item.name }}</view>
                    <view>
                        <block wx:if="{{ item.values }}">
                            <text wx:for="{{ item.values }}" wx:key="{{ param.id }}" wx:for-item="param">{{ param.name }}，</text>
                        </block>
                        <block wx:else>
                            {{ item.value }}
                        </block>
                    </view>
                </view>
            </zan-panel>
        </view>
    </view>
    <view class="buy-nav">
        <zan-row>
            <zan-col col="4" class="nav-icon">
                <button class="nav-icon" open-type="contact">
                    <zan-icon type="chat" style="font-size: 25px; color: #409EFF;"></zan-icon>
                </button>
            </zan-col>
            <zan-col col="4">
                <navigator url="/pages/shop/carts" open-type="switchTab" class="nav-icon">
                    <view class="badge" wx:if="{{ cartsCount }}">{{ cartsCount }}</view>
                    <zan-icon type="cart" style="font-size: 25px;"></zan-icon>
                </navigator>
            </zan-col>
            <zan-col col="8">
                <button class="wg-btn-warn large" @tap="openSpecs">加入购物车</button>
            </zan-col>
            <zan-col col="8">
                <button class="wg-btn-danger large" @tap="buy">立即购买</button>
            </zan-col>
        </zan-row>
    </view>
    <zan-popup show="{{ showSpecs }}" type="bottom" bindclose="closeSpecs">
        <view class="specs">
            <view class="specs-product zan-clearfix">
                <view class="thumb">
                    <image src="{{ sku && sku.thumb ? sku.thumb : product.thumb }}" mode="widthFix" />
                </view>
                <view class="product-detail">
                    <view class="price zan-c-red zan-font-18">￥{{ sku ? (sku.activity_price || sku.price) : product.price }}</view>
                    <view class="stocks">库存： {{ sku ? sku.stocks : product.stocks }} 件</view>
                    <view class="params">选择： <span wx:for="{{ product.specs.data }}" wx:key="id">{{ item.selected ? item.value.name : item.name }} </span></view>
                </view>
            </view>
            <view class="specs-attributes">
                <view class="item" wx:for="{{ product.specs.data }}" wx:for-index="index" wx:key="id">
                    <view class="item-name">{{ item.name }}</view>
                    <view class="params">
                        <view class="param-name {{ value.selected ? 'selected' : '' }}" wx:for="{{ item.values }}" wx:for-item="value" wx:for-index="valueIndex" wx:key="id" @tap="selectSpec({{ index }}, {{ valueIndex }})">{{ value.name }}</view>
                    </view>
                </view>
            </view>
            <view class="buy-number">
                <zan-cell title="购买数量" class="buy-number-cell">
                    <zan-stepper slot="footer" stepper="{{ sku ? sku.num : product.num }}" min="1" max="{{ sku ? sku.stocks : product.stocks }}" size="small" bind:change="setNum"></zan-stepper>
                </zan-cell>
            </view>
            <view style="padding: 20px;">
                <button class="wg-btn-danger radius" disabled="{{ !(product.skus ? sku && sku.num : product.num) }}" @tap="storeCart">确定</button>
            </view>
        </view>
    </zan-popup>
</template>
<script>
    import wepy from 'wepy';
    import api from '@/api/api';
    import WxParse from '@/plugins/wxParse/wxParse';

    export default class Product extends wepy.page {
        config = {
            usingComponents: {
                "zan-cell": "../../zanUi/cell/index",
                "zan-cell-group": "../../zanUi/cell-group/index",
                "zan-panel": "../../zanUi/panel/index",
                "zan-tab": "../../zanUi/tab/index",
                "zan-row": "../../zanUi/row/index",
                "zan-col": "../../zanUi/col/index",
                "zan-button": "../../zanUi/btn/index",
                "zan-icon": "../../zanUi/icon/index",
                "zan-popup": "../../zanUi/popup/index",
                "zan-stepper": "../../zanUi/stepper/index",
                "zan-badge": "../../zanUi/badge/index",
            },
        };
        data = {
            tabId: 1,
            showSpecs: false,
            id: null,
            product: null,
            selectedSpecs: [],
            sku: null,
            cartsCount: 0,
            justBuy: false,
        };
        watch = {
            selectedSpecs() {
                if (this.selectedSpecs.length != this.product.specs.data.length) return;
                let specs = [];
                this.selectedSpecs.forEach(item => {
                    specs.push(`${item.attribute_id}:${item.param_id}`);
                });
                let flag = specs.join('-');
                this.sku = this.product.skus.data.find(item => item.flag == flag);
            }
        };
        onLoad(params) {
            wepy.setNavigationBarTitle({ title: '商品详情' });
            this.id = params.id;
        };
        onShow() {
            this.closeSpecs();
            this.sku = null;
            this.selectedSpecs = [];
            this.getProduct();
            this.getCartsCount();
        };
        async getProduct() {
            let res = await api.getProduct(this.id, {
                include: 'attributes.values,specs.values,brand,skus.params,images,content,couponsCount,activity'
            });
            if(res.data.content) WxParse.wxParse('content', 'html', res.data.content, this);
            this.product = res.data;
            this.$apply();
        };
        async getCartsCount() {
            let res = await api.getCartsCount();
            this.cartsCount = res.data;
            this.$apply();
        };
        closeSpecs() {
            this.justBuy = false;
            this.showSpecs = false;
            this.$apply();
        };
        openSpecs() {
            this.showSpecs = true;
        };
        // 添加商品到购物车
        async storeCart() {
            if (this.product.skus && !this.selectedSpecs.length) {
                wepy.showToast({
                    title: '请选择规格~',
                    icon: 'none'
                });
                return;
            }
            if(this.justBuy) {
                wepy.navigateTo({
                    url: `/pages/shop/buy?product_id=${this.product.id}&sku_id=${this.sku.id}&num=${this.sku.num}`
                });
            }
            else {
                let res = await api.storeCart({
                    product_id: this.product.id,
                    sku_id: this.sku.id,
                    num: this.sku.num
                });
                if (!res.error) {
                    this.closeSpecs();
                    this.cartsCount = res.data.meta.count;
                    wepy.showToast({
                        title: '已加入购物车',
                    });
                }
            }
            this.$apply();
        };
        buy() {
            this.justBuy = true;
            this.openSpecs();
        };
        methods = {
            handelTab(e) {
                this.tabId = e.detail;
            },
            selectSpec(index, valueIndex) {
                let spec = this.product.specs.data[index];
                spec.values.forEach(item => {
                    item.selected = false;
                });
                let value = spec.values[valueIndex];
                value.selected = true;
                spec.selected = true;
                spec.value = value;
                let findSpecIndex = this.selectedSpecs.findIndex(item => item.attribute_id == spec.id);
                if (findSpecIndex > -1) {
                    let findSpec = this.selectedSpecs[findSpecIndex];
                    findSpec.param_id = value.id;
                } else {
                    this.selectedSpecs.push({
                        index: index,
                        attribute_id: spec.id,
                        param_id: value.id,
                        param_name: value.name
                    });
                }
                this.selectedSpecs.sort((a, b) => {
                    return a.index > b.index;
                });
            },
            setNum(event) {
                this.sku.num = event.detail;
            }
        }
    }
</script>
<style scoped>
    @import '../../assets/wxss/html.wxss';
</style>
<style lang="scss">
    .buy-nav button {
        border-radius: 0;
    }
    page {
        padding-bottom: 60px;
    }
    .buy-number-cell view {
        font-size: 16px;
    }
</style>
<style lang="scss" scoped>
    @import '../../assets/sass/variable';
    .wg-icon-youhuiquan {
        color: $color-danger;
        font-size: 20px;
    }
    .wg-icon-cuxiao {
        color: $color-primary;
        font-size: 20px;
    }
    .sliders {
        max-height: 400px;
        text-align: center;
        overflow: hidden;
        swiper {
            height: 400px;
        }
        image {
            width: 100%;
        }
    }
    .panel {
        margin-bottom: 10px;
    }
    .title-cell {
        background: #fff;
        margin-bottom: 10px;
        padding: 10px;
        .title {
            color: #333;
        }
        .description {
            color: #999;
            padding: 10px 0;
        }
        .price {
            color: $color-danger;
            font-weight: bold;
        }
    }
    .detail {
        padding: 10px 0;
        background: #fff;
    }
    .attributes {
        padding: 10px;
        background: #fff;
        .item {
            padding: 10px;
        }
        .item view:first-child {
            float: left;
            width: 80px;
            color: #999;
        }
        .item view:last-child {
            padding-left: 90px;
            color: #444;
        }
    }
    .buy-nav {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background: #fff;
        border-top: 1px solid #eee;
        line-height: 46px;
        .nav-icon {
            text-align: center;
            color: #666;
            cursor: pointer;
            position: relative;
            .badge {
                position:absolute;
                top: -3px;
                right: 18px;
                height: 1.6em;
                min-width: 1.6em;
                line-height: 1.6;
                padding: 0 .4em;
                font-size: 20px;
                border-radius: .8em;
                background: $color-danger;
                color: #fff;
                text-align: center;
                white-space: nowrap;
                -webkit-transform: translateX(50%) scale(.5);
                transform: translateX(50%) scale(.5);
                -webkit-transform-origin: center;
                transform-origin: center;
                z-index: 10;
                box-shadow: 0 0 0 2px #fff;
                box-sizing: border-box;
            }
            &::before {
                position: absolute;
                content: '';
                left: 0;
                top: 0;
                bottom: 0;
                width: 1px;
                background: #eee;
            }
        }
        button.nav-icon {
            background: none;
            line-height: 46px;
            &::after {
                border: none;
            }
        }

    }
    .specs {
        width: 100vw;
        background: #fff;
        .specs-product {
            padding: 10px 20px;
            position: relative;
            .thumb {
                position: absolute;
                top: -20px;
                width: 100px;
                height: 100px;
                border: 1px solid #ddd;
                padding: 3px;
                background: #fff;
                border-radius: 5px;
                overflow: hidden;
                vertical-align: middle;
                line-height: 100px;
                image {
                    width: 100px;
                    height: 100px;
                    vertical-align: middle;
                }
            }
            .product-detail {
                padding-left: 120px;
                .stocks {
                    padding: 5px 0;
                }
            }
        }
        .specs-attributes {
            .item {
                padding: 10px;
                border-bottom: 1px solid #eee;
                .item-name {
                    font-size: 16px;
                    color: #333;
                    padding: 10px;
                }
                .param-name {
                    font-size: 12px;
                    color: #666;
                    display: inline-block;
                    padding: 5px 20px;
                    background: #eee;
                    margin: 5px 8px 5px 0;
                    border-radius: 15px;
                }
                .selected {
                    background: $color-danger;
                    color: #fff;
                }
            }
        }
    }
</style>
